{"version":3,"sources":["NewTodoForm.js","Todo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["NewTodoForm","props","state","task","handleChange","bind","handleSubmit","evt","this","setState","target","name","value","preventDefault","todo","trim","id","Math","floor","random","create","onSubmit","className","placeholder","onChange","required","Component","Todo","isDone","isEditing","handleRemove","toggleIsEditing","toggleIsDone","handleClose","update","remove","st","onClick","class","minWidth","matches","CSSTransition","in","timeout","classNames","unmountOnExit","Dialog","open","onClose","DialogContent","TodoList","todos","isAdding","toggleForm","newTodo","filter","newTask","newTodos","map","TransitionGroup","App","Grid","container","columns","justifyContent","item","xs","md","lg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12455a9f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './NewTodoForm.css'\r\n\r\nclass NewTodoForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { task: \"\" }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleChange(evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value })\r\n    }\r\n    handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        let todo = {\r\n            task: this.state.task.trim(),\r\n            id: Math.floor(Math.random() * 10)\r\n        }\r\n        this.props.create(todo);\r\n        this.setState({ task: \"\" })\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className='NewTodoForm'>\r\n                {/* <label htmlFor=\"add\">Add a Todo</label> */}\r\n                <input className='input'\r\n                    id=\"add\"\r\n                    placeholder=\"Add Todo\"\r\n                    name=\"task\"\r\n                    value={this.state.task}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                />\r\n                <button className='button'>Add</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewTodoForm","import React, { Component } from 'react'\r\nimport './Todo.css'\r\nimport { Dialog, DialogContent } from '@mui/material';\r\nimport MediaQuery from 'react-responsive';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            task: this.props.todo.task,\r\n            isDone: false,\r\n            isEditing: false,\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.toggleIsEditing = this.toggleIsEditing.bind(this);\r\n        this.toggleIsDone = this.toggleIsDone.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n\r\n    }\r\n\r\n\r\n    handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        this.props.update(this.props.todo.id, this.state.task)\r\n        this.setState({ ...this.state, isEditing: false })\r\n    }\r\n\r\n    handleChange(evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value })\r\n    }\r\n\r\n    handleRemove() {\r\n        this.props.remove(this.props.todo.id);\r\n    }\r\n\r\n    toggleIsEditing() {\r\n        this.setState(st => ({ ...st, isEditing: true }))\r\n    }\r\n\r\n    toggleIsDone() {\r\n        this.setState(st => ({ ...st, isDone: !st.isDone }))\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState(st => ({ ...st, isEditing: false }))\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='Todo'>\r\n                {!this.state.isEditing && (\r\n                    <div className='Todo-task-container'>\r\n\r\n                        <div onClick={this.toggleIsDone}\r\n                            className={this.state.isDone ? \"Todo-task completed\" : \"Todo-task\"\r\n                            }>\r\n                            {this.props.todo.task}\r\n                        </div>\r\n                        <div className='Todo-buttons'>\r\n                            <button onClick={this.toggleIsEditing}>\r\n                                <i class=\"fas fa-pencil-alt\"></i>\r\n                            </button>\r\n                            <button onClick={this.handleRemove}>\r\n                                <i class=\"fas fa-trash-alt\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>)}\r\n\r\n                <MediaQuery minWidth={768}>\r\n                    {(matches) =>\r\n                        matches\r\n                            ?\r\n                            <CSSTransition in={this.state.isEditing} timeout={500} classNames='form' unmountOnExit>\r\n                                <form onSubmit={this.handleSubmit} className='Todo-edit-form'>\r\n                                    <input className='input'\r\n                                        name=\"task\"\r\n                                        value={this.state.task}\r\n                                        onChange={this.handleChange}\r\n                                        required\r\n                                    />\r\n                                    <button className='button'>Save</button>\r\n                                </form>\r\n                            </CSSTransition>\r\n                            : <Dialog open={this.state.isEditing} onClose={this.handleClose}>\r\n                                <DialogContent>\r\n                                    <form onSubmit={this.handleSubmit} className='Todo-edit-form'>\r\n                                        <input className='input'\r\n                                            name=\"task\"\r\n                                            value={this.state.task}\r\n                                            onChange={this.handleChange}\r\n                                            required\r\n                                        />\r\n                                        <button className='button'>Save</button>\r\n                                    </form>\r\n                                </DialogContent>\r\n                            </Dialog>\r\n                    }\r\n                </MediaQuery>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react'\r\nimport NewTodoForm from './NewTodoForm';\r\nimport Todo from './Todo';\r\nimport './TodoList.css'\r\nimport { Dialog, DialogContent } from '@mui/material';\r\nimport MediaQuery from 'react-responsive';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todos: [{\r\n                id: 121,\r\n                task: \"Pet Max\",\r\n            }],\r\n            isAdding: false,\r\n        }\r\n        this.create = this.create.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n        this.update = this.update.bind(this);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n\r\n    }\r\n    create(newTodo) {\r\n        this.setState(st => {\r\n            return { todos: [...st.todos, newTodo], isAdding: false }\r\n        })\r\n    }\r\n    remove(id) {\r\n        this.setState(st => ({\r\n            ...st,\r\n            todos: this.state.todos.filter(todo => todo.id !== id)\r\n        }))\r\n    }\r\n    update(id, newTask) {\r\n        let newTodos = this.state.todos.map(todo => {\r\n            if (todo.id === id)\r\n                return { ...todo, task: newTask.trim() };\r\n            else\r\n                return todo;\r\n        })\r\n        this.setState(st => ({ ...st, todos: newTodos }))\r\n    }\r\n    toggleForm() {\r\n        this.setState(st => ({ ...st, isAdding: !st.isAdding }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='TodoList'>\r\n                <h1>Tasks.js<span>A simple todo app made with React.</span></h1>\r\n                <p>\" Click on a task to mark as done \"</p>\r\n\r\n                <TransitionGroup className='TodoList-container'>\r\n\r\n                    {this.state.todos.map(todo =>\r\n                        <CSSTransition\r\n                            key={todo.id}\r\n                            classNames='todo'\r\n                            timeout={500}\r\n                        >\r\n                            <Todo\r\n                                key={todo.id}\r\n                                todo={todo}\r\n                                remove={this.remove}\r\n                                update={this.update}\r\n                            />\r\n                        </CSSTransition>\r\n                    )}\r\n                </TransitionGroup>\r\n\r\n\r\n                <MediaQuery minWidth={768}>\r\n                    {(matches) =>\r\n                        matches\r\n                            ? <NewTodoForm className='form' create={this.create} />\r\n                            : <button className='Add-btn' onClick={this.toggleForm}>Add</button>\r\n                    }\r\n                </MediaQuery>\r\n                <Dialog open={this.state.isAdding} onClose={this.toggleForm}>\r\n                    <DialogContent>\r\n                        <NewTodoForm create={this.create} />\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;","import './App.css'\nimport TodoList from './TodoList';\nimport Grid from '@mui/material/Grid'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Grid className='container' container columns={8} justifyContent='center'>\n        <Grid item xs={6} md={4} lg={3} >\n          <TodoList />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}